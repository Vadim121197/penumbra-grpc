// source: src/proto/chain.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var src_proto_crypto_pb = require('../../src/proto/crypto_pb.js');
goog.object.extend(proto, src_proto_crypto_pb);
var src_proto_stake_pb = require('../../src/proto/stake_pb.js');
goog.object.extend(proto, src_proto_stake_pb);
goog.exportSymbol('proto.penumbra.chain.AnnotatedNotePayload', null, global);
goog.exportSymbol('proto.penumbra.chain.AssetInfo', null, global);
goog.exportSymbol('proto.penumbra.chain.ChainParameters', null, global);
goog.exportSymbol('proto.penumbra.chain.CompactBlock', null, global);
goog.exportSymbol('proto.penumbra.chain.DelibleNoteSource', null, global);
goog.exportSymbol('proto.penumbra.chain.FmdParameters', null, global);
goog.exportSymbol('proto.penumbra.chain.GenesisAppState', null, global);
goog.exportSymbol('proto.penumbra.chain.GenesisAppState.Allocation', null, global);
goog.exportSymbol('proto.penumbra.chain.KnownAssets', null, global);
goog.exportSymbol('proto.penumbra.chain.NoteSource', null, global);
goog.exportSymbol('proto.penumbra.chain.Quarantined', null, global);
goog.exportSymbol('proto.penumbra.chain.Quarantined.EpochEntry', null, global);
goog.exportSymbol('proto.penumbra.chain.Quarantined.Scheduled', null, global);
goog.exportSymbol('proto.penumbra.chain.Quarantined.Unbonding', null, global);
goog.exportSymbol('proto.penumbra.chain.Quarantined.ValidatorEntry', null, global);
goog.exportSymbol('proto.penumbra.chain.Ratio', null, global);
goog.exportSymbol('proto.penumbra.chain.Slashed', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.chain.ChainParameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.chain.ChainParameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.chain.ChainParameters.displayName = 'proto.penumbra.chain.ChainParameters';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.chain.Ratio = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.chain.Ratio, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.chain.Ratio.displayName = 'proto.penumbra.chain.Ratio';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.chain.FmdParameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.chain.FmdParameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.chain.FmdParameters.displayName = 'proto.penumbra.chain.FmdParameters';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.chain.AssetInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.chain.AssetInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.chain.AssetInfo.displayName = 'proto.penumbra.chain.AssetInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.chain.CompactBlock = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.penumbra.chain.CompactBlock.repeatedFields_, null);
};
goog.inherits(proto.penumbra.chain.CompactBlock, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.chain.CompactBlock.displayName = 'proto.penumbra.chain.CompactBlock';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.chain.AnnotatedNotePayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.chain.AnnotatedNotePayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.chain.AnnotatedNotePayload.displayName = 'proto.penumbra.chain.AnnotatedNotePayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.chain.KnownAssets = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.penumbra.chain.KnownAssets.repeatedFields_, null);
};
goog.inherits(proto.penumbra.chain.KnownAssets, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.chain.KnownAssets.displayName = 'proto.penumbra.chain.KnownAssets';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.chain.NoteSource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.chain.NoteSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.chain.NoteSource.displayName = 'proto.penumbra.chain.NoteSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.chain.DelibleNoteSource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.chain.DelibleNoteSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.chain.DelibleNoteSource.displayName = 'proto.penumbra.chain.DelibleNoteSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.chain.GenesisAppState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.penumbra.chain.GenesisAppState.repeatedFields_, null);
};
goog.inherits(proto.penumbra.chain.GenesisAppState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.chain.GenesisAppState.displayName = 'proto.penumbra.chain.GenesisAppState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.chain.GenesisAppState.Allocation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.chain.GenesisAppState.Allocation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.chain.GenesisAppState.Allocation.displayName = 'proto.penumbra.chain.GenesisAppState.Allocation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.chain.Quarantined = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.penumbra.chain.Quarantined.repeatedFields_, null);
};
goog.inherits(proto.penumbra.chain.Quarantined, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.chain.Quarantined.displayName = 'proto.penumbra.chain.Quarantined';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.chain.Quarantined.Unbonding = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.penumbra.chain.Quarantined.Unbonding.repeatedFields_, null);
};
goog.inherits(proto.penumbra.chain.Quarantined.Unbonding, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.chain.Quarantined.Unbonding.displayName = 'proto.penumbra.chain.Quarantined.Unbonding';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.chain.Quarantined.ValidatorEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.chain.Quarantined.ValidatorEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.chain.Quarantined.ValidatorEntry.displayName = 'proto.penumbra.chain.Quarantined.ValidatorEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.chain.Quarantined.Scheduled = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.penumbra.chain.Quarantined.Scheduled.repeatedFields_, null);
};
goog.inherits(proto.penumbra.chain.Quarantined.Scheduled, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.chain.Quarantined.Scheduled.displayName = 'proto.penumbra.chain.Quarantined.Scheduled';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.chain.Quarantined.EpochEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.penumbra.chain.Quarantined.EpochEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.chain.Quarantined.EpochEntry.displayName = 'proto.penumbra.chain.Quarantined.EpochEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.penumbra.chain.Slashed = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.penumbra.chain.Slashed.repeatedFields_, null);
};
goog.inherits(proto.penumbra.chain.Slashed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.penumbra.chain.Slashed.displayName = 'proto.penumbra.chain.Slashed';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.chain.ChainParameters.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.chain.ChainParameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.chain.ChainParameters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.ChainParameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    chainId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    epochDuration: jspb.Message.getFieldWithDefault(msg, 2, 0),
    unbondingEpochs: jspb.Message.getFieldWithDefault(msg, 3, 0),
    activeValidatorLimit: jspb.Message.getFieldWithDefault(msg, 4, 0),
    baseRewardRate: jspb.Message.getFieldWithDefault(msg, 9, 0),
    slashingPenaltyMisbehaviorBps: jspb.Message.getFieldWithDefault(msg, 5, 0),
    slashingPenaltyDowntimeBps: jspb.Message.getFieldWithDefault(msg, 10, 0),
    signedBlocksWindowLen: jspb.Message.getFieldWithDefault(msg, 11, 0),
    missedBlocksMaximum: jspb.Message.getFieldWithDefault(msg, 12, 0),
    ibcEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    inboundIcs20TransfersEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    outboundIcs20TransfersEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    proposalVotingBlocks: jspb.Message.getFieldWithDefault(msg, 20, 0),
    proposalDepositAmount: jspb.Message.getFieldWithDefault(msg, 21, 0),
    proposalValidQuorum: (f = msg.getProposalValidQuorum()) && proto.penumbra.chain.Ratio.toObject(includeInstance, f),
    proposalPassThreshold: (f = msg.getProposalPassThreshold()) && proto.penumbra.chain.Ratio.toObject(includeInstance, f),
    proposalVetoThreshold: (f = msg.getProposalVetoThreshold()) && proto.penumbra.chain.Ratio.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.chain.ChainParameters}
 */
proto.penumbra.chain.ChainParameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.chain.ChainParameters;
  return proto.penumbra.chain.ChainParameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.chain.ChainParameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.chain.ChainParameters}
 */
proto.penumbra.chain.ChainParameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChainId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEpochDuration(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUnbondingEpochs(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setActiveValidatorLimit(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBaseRewardRate(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSlashingPenaltyMisbehaviorBps(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSlashingPenaltyDowntimeBps(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSignedBlocksWindowLen(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMissedBlocksMaximum(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIbcEnabled(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInboundIcs20TransfersEnabled(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOutboundIcs20TransfersEnabled(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setProposalVotingBlocks(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setProposalDepositAmount(value);
      break;
    case 22:
      var value = new proto.penumbra.chain.Ratio;
      reader.readMessage(value,proto.penumbra.chain.Ratio.deserializeBinaryFromReader);
      msg.setProposalValidQuorum(value);
      break;
    case 23:
      var value = new proto.penumbra.chain.Ratio;
      reader.readMessage(value,proto.penumbra.chain.Ratio.deserializeBinaryFromReader);
      msg.setProposalPassThreshold(value);
      break;
    case 24:
      var value = new proto.penumbra.chain.Ratio;
      reader.readMessage(value,proto.penumbra.chain.Ratio.deserializeBinaryFromReader);
      msg.setProposalVetoThreshold(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.chain.ChainParameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.chain.ChainParameters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.chain.ChainParameters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.ChainParameters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEpochDuration();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getUnbondingEpochs();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getActiveValidatorLimit();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getBaseRewardRate();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getSlashingPenaltyMisbehaviorBps();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getSlashingPenaltyDowntimeBps();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getSignedBlocksWindowLen();
  if (f !== 0) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getMissedBlocksMaximum();
  if (f !== 0) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = message.getIbcEnabled();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getInboundIcs20TransfersEnabled();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getOutboundIcs20TransfersEnabled();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getProposalVotingBlocks();
  if (f !== 0) {
    writer.writeUint64(
      20,
      f
    );
  }
  f = message.getProposalDepositAmount();
  if (f !== 0) {
    writer.writeUint64(
      21,
      f
    );
  }
  f = message.getProposalValidQuorum();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.penumbra.chain.Ratio.serializeBinaryToWriter
    );
  }
  f = message.getProposalPassThreshold();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto.penumbra.chain.Ratio.serializeBinaryToWriter
    );
  }
  f = message.getProposalVetoThreshold();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      proto.penumbra.chain.Ratio.serializeBinaryToWriter
    );
  }
};


/**
 * optional string chain_id = 1;
 * @return {string}
 */
proto.penumbra.chain.ChainParameters.prototype.getChainId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.setChainId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 epoch_duration = 2;
 * @return {number}
 */
proto.penumbra.chain.ChainParameters.prototype.getEpochDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.setEpochDuration = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 unbonding_epochs = 3;
 * @return {number}
 */
proto.penumbra.chain.ChainParameters.prototype.getUnbondingEpochs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.setUnbondingEpochs = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 active_validator_limit = 4;
 * @return {number}
 */
proto.penumbra.chain.ChainParameters.prototype.getActiveValidatorLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.setActiveValidatorLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 base_reward_rate = 9;
 * @return {number}
 */
proto.penumbra.chain.ChainParameters.prototype.getBaseRewardRate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.setBaseRewardRate = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint64 slashing_penalty_misbehavior_bps = 5;
 * @return {number}
 */
proto.penumbra.chain.ChainParameters.prototype.getSlashingPenaltyMisbehaviorBps = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.setSlashingPenaltyMisbehaviorBps = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 slashing_penalty_downtime_bps = 10;
 * @return {number}
 */
proto.penumbra.chain.ChainParameters.prototype.getSlashingPenaltyDowntimeBps = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.setSlashingPenaltyDowntimeBps = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional uint64 signed_blocks_window_len = 11;
 * @return {number}
 */
proto.penumbra.chain.ChainParameters.prototype.getSignedBlocksWindowLen = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.setSignedBlocksWindowLen = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional uint64 missed_blocks_maximum = 12;
 * @return {number}
 */
proto.penumbra.chain.ChainParameters.prototype.getMissedBlocksMaximum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.setMissedBlocksMaximum = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional bool ibc_enabled = 6;
 * @return {boolean}
 */
proto.penumbra.chain.ChainParameters.prototype.getIbcEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.setIbcEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool inbound_ics20_transfers_enabled = 7;
 * @return {boolean}
 */
proto.penumbra.chain.ChainParameters.prototype.getInboundIcs20TransfersEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.setInboundIcs20TransfersEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool outbound_ics20_transfers_enabled = 8;
 * @return {boolean}
 */
proto.penumbra.chain.ChainParameters.prototype.getOutboundIcs20TransfersEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.setOutboundIcs20TransfersEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional uint64 proposal_voting_blocks = 20;
 * @return {number}
 */
proto.penumbra.chain.ChainParameters.prototype.getProposalVotingBlocks = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.setProposalVotingBlocks = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional uint64 proposal_deposit_amount = 21;
 * @return {number}
 */
proto.penumbra.chain.ChainParameters.prototype.getProposalDepositAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.setProposalDepositAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional Ratio proposal_valid_quorum = 22;
 * @return {?proto.penumbra.chain.Ratio}
 */
proto.penumbra.chain.ChainParameters.prototype.getProposalValidQuorum = function() {
  return /** @type{?proto.penumbra.chain.Ratio} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.chain.Ratio, 22));
};


/**
 * @param {?proto.penumbra.chain.Ratio|undefined} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
*/
proto.penumbra.chain.ChainParameters.prototype.setProposalValidQuorum = function(value) {
  return jspb.Message.setWrapperField(this, 22, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.clearProposalValidQuorum = function() {
  return this.setProposalValidQuorum(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.chain.ChainParameters.prototype.hasProposalValidQuorum = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional Ratio proposal_pass_threshold = 23;
 * @return {?proto.penumbra.chain.Ratio}
 */
proto.penumbra.chain.ChainParameters.prototype.getProposalPassThreshold = function() {
  return /** @type{?proto.penumbra.chain.Ratio} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.chain.Ratio, 23));
};


/**
 * @param {?proto.penumbra.chain.Ratio|undefined} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
*/
proto.penumbra.chain.ChainParameters.prototype.setProposalPassThreshold = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.clearProposalPassThreshold = function() {
  return this.setProposalPassThreshold(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.chain.ChainParameters.prototype.hasProposalPassThreshold = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional Ratio proposal_veto_threshold = 24;
 * @return {?proto.penumbra.chain.Ratio}
 */
proto.penumbra.chain.ChainParameters.prototype.getProposalVetoThreshold = function() {
  return /** @type{?proto.penumbra.chain.Ratio} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.chain.Ratio, 24));
};


/**
 * @param {?proto.penumbra.chain.Ratio|undefined} value
 * @return {!proto.penumbra.chain.ChainParameters} returns this
*/
proto.penumbra.chain.ChainParameters.prototype.setProposalVetoThreshold = function(value) {
  return jspb.Message.setWrapperField(this, 24, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.chain.ChainParameters} returns this
 */
proto.penumbra.chain.ChainParameters.prototype.clearProposalVetoThreshold = function() {
  return this.setProposalVetoThreshold(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.chain.ChainParameters.prototype.hasProposalVetoThreshold = function() {
  return jspb.Message.getField(this, 24) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.chain.Ratio.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.chain.Ratio.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.chain.Ratio} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.Ratio.toObject = function(includeInstance, msg) {
  var f, obj = {
    numerator: jspb.Message.getFieldWithDefault(msg, 1, 0),
    denominator: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.chain.Ratio}
 */
proto.penumbra.chain.Ratio.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.chain.Ratio;
  return proto.penumbra.chain.Ratio.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.chain.Ratio} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.chain.Ratio}
 */
proto.penumbra.chain.Ratio.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumerator(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDenominator(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.chain.Ratio.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.chain.Ratio.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.chain.Ratio} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.Ratio.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumerator();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getDenominator();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 numerator = 1;
 * @return {number}
 */
proto.penumbra.chain.Ratio.prototype.getNumerator = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.chain.Ratio} returns this
 */
proto.penumbra.chain.Ratio.prototype.setNumerator = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 denominator = 2;
 * @return {number}
 */
proto.penumbra.chain.Ratio.prototype.getDenominator = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.chain.Ratio} returns this
 */
proto.penumbra.chain.Ratio.prototype.setDenominator = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.chain.FmdParameters.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.chain.FmdParameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.chain.FmdParameters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.FmdParameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    precisionBits: jspb.Message.getFieldWithDefault(msg, 1, 0),
    asOfBlockHeight: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.chain.FmdParameters}
 */
proto.penumbra.chain.FmdParameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.chain.FmdParameters;
  return proto.penumbra.chain.FmdParameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.chain.FmdParameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.chain.FmdParameters}
 */
proto.penumbra.chain.FmdParameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPrecisionBits(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAsOfBlockHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.chain.FmdParameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.chain.FmdParameters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.chain.FmdParameters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.FmdParameters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrecisionBits();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getAsOfBlockHeight();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint32 precision_bits = 1;
 * @return {number}
 */
proto.penumbra.chain.FmdParameters.prototype.getPrecisionBits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.chain.FmdParameters} returns this
 */
proto.penumbra.chain.FmdParameters.prototype.setPrecisionBits = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 as_of_block_height = 2;
 * @return {number}
 */
proto.penumbra.chain.FmdParameters.prototype.getAsOfBlockHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.chain.FmdParameters} returns this
 */
proto.penumbra.chain.FmdParameters.prototype.setAsOfBlockHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.chain.AssetInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.chain.AssetInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.chain.AssetInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.AssetInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    assetId: (f = msg.getAssetId()) && src_proto_crypto_pb.AssetId.toObject(includeInstance, f),
    denom: (f = msg.getDenom()) && src_proto_crypto_pb.Denom.toObject(includeInstance, f),
    asOfBlockHeight: jspb.Message.getFieldWithDefault(msg, 3, 0),
    totalSupply: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.chain.AssetInfo}
 */
proto.penumbra.chain.AssetInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.chain.AssetInfo;
  return proto.penumbra.chain.AssetInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.chain.AssetInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.chain.AssetInfo}
 */
proto.penumbra.chain.AssetInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new src_proto_crypto_pb.AssetId;
      reader.readMessage(value,src_proto_crypto_pb.AssetId.deserializeBinaryFromReader);
      msg.setAssetId(value);
      break;
    case 2:
      var value = new src_proto_crypto_pb.Denom;
      reader.readMessage(value,src_proto_crypto_pb.Denom.deserializeBinaryFromReader);
      msg.setDenom(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAsOfBlockHeight(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalSupply(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.chain.AssetInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.chain.AssetInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.chain.AssetInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.AssetInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssetId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      src_proto_crypto_pb.AssetId.serializeBinaryToWriter
    );
  }
  f = message.getDenom();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      src_proto_crypto_pb.Denom.serializeBinaryToWriter
    );
  }
  f = message.getAsOfBlockHeight();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getTotalSupply();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * optional penumbra.crypto.AssetId asset_id = 1;
 * @return {?proto.penumbra.crypto.AssetId}
 */
proto.penumbra.chain.AssetInfo.prototype.getAssetId = function() {
  return /** @type{?proto.penumbra.crypto.AssetId} */ (
    jspb.Message.getWrapperField(this, src_proto_crypto_pb.AssetId, 1));
};


/**
 * @param {?proto.penumbra.crypto.AssetId|undefined} value
 * @return {!proto.penumbra.chain.AssetInfo} returns this
*/
proto.penumbra.chain.AssetInfo.prototype.setAssetId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.chain.AssetInfo} returns this
 */
proto.penumbra.chain.AssetInfo.prototype.clearAssetId = function() {
  return this.setAssetId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.chain.AssetInfo.prototype.hasAssetId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional penumbra.crypto.Denom denom = 2;
 * @return {?proto.penumbra.crypto.Denom}
 */
proto.penumbra.chain.AssetInfo.prototype.getDenom = function() {
  return /** @type{?proto.penumbra.crypto.Denom} */ (
    jspb.Message.getWrapperField(this, src_proto_crypto_pb.Denom, 2));
};


/**
 * @param {?proto.penumbra.crypto.Denom|undefined} value
 * @return {!proto.penumbra.chain.AssetInfo} returns this
*/
proto.penumbra.chain.AssetInfo.prototype.setDenom = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.chain.AssetInfo} returns this
 */
proto.penumbra.chain.AssetInfo.prototype.clearDenom = function() {
  return this.setDenom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.chain.AssetInfo.prototype.hasDenom = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 as_of_block_height = 3;
 * @return {number}
 */
proto.penumbra.chain.AssetInfo.prototype.getAsOfBlockHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.chain.AssetInfo} returns this
 */
proto.penumbra.chain.AssetInfo.prototype.setAsOfBlockHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 total_supply = 4;
 * @return {number}
 */
proto.penumbra.chain.AssetInfo.prototype.getTotalSupply = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.chain.AssetInfo} returns this
 */
proto.penumbra.chain.AssetInfo.prototype.setTotalSupply = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.penumbra.chain.CompactBlock.repeatedFields_ = [2,3,16];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.chain.CompactBlock.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.chain.CompactBlock.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.chain.CompactBlock} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.CompactBlock.toObject = function(includeInstance, msg) {
  var f, obj = {
    height: jspb.Message.getFieldWithDefault(msg, 1, 0),
    notePayloadsList: jspb.Message.toObjectList(msg.getNotePayloadsList(),
    proto.penumbra.chain.AnnotatedNotePayload.toObject, includeInstance),
    nullifiersList: jspb.Message.toObjectList(msg.getNullifiersList(),
    src_proto_crypto_pb.Nullifier.toObject, includeInstance),
    blockRoot: (f = msg.getBlockRoot()) && src_proto_crypto_pb.MerkleRoot.toObject(includeInstance, f),
    epochRoot: (f = msg.getEpochRoot()) && src_proto_crypto_pb.MerkleRoot.toObject(includeInstance, f),
    quarantined: (f = msg.getQuarantined()) && proto.penumbra.chain.Quarantined.toObject(includeInstance, f),
    slashedList: jspb.Message.toObjectList(msg.getSlashedList(),
    src_proto_crypto_pb.IdentityKey.toObject, includeInstance),
    proposalStarted: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
    fmdParameters: (f = msg.getFmdParameters()) && proto.penumbra.chain.FmdParameters.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.chain.CompactBlock}
 */
proto.penumbra.chain.CompactBlock.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.chain.CompactBlock;
  return proto.penumbra.chain.CompactBlock.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.chain.CompactBlock} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.chain.CompactBlock}
 */
proto.penumbra.chain.CompactBlock.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setHeight(value);
      break;
    case 2:
      var value = new proto.penumbra.chain.AnnotatedNotePayload;
      reader.readMessage(value,proto.penumbra.chain.AnnotatedNotePayload.deserializeBinaryFromReader);
      msg.addNotePayloads(value);
      break;
    case 3:
      var value = new src_proto_crypto_pb.Nullifier;
      reader.readMessage(value,src_proto_crypto_pb.Nullifier.deserializeBinaryFromReader);
      msg.addNullifiers(value);
      break;
    case 4:
      var value = new src_proto_crypto_pb.MerkleRoot;
      reader.readMessage(value,src_proto_crypto_pb.MerkleRoot.deserializeBinaryFromReader);
      msg.setBlockRoot(value);
      break;
    case 5:
      var value = new src_proto_crypto_pb.MerkleRoot;
      reader.readMessage(value,src_proto_crypto_pb.MerkleRoot.deserializeBinaryFromReader);
      msg.setEpochRoot(value);
      break;
    case 6:
      var value = new proto.penumbra.chain.Quarantined;
      reader.readMessage(value,proto.penumbra.chain.Quarantined.deserializeBinaryFromReader);
      msg.setQuarantined(value);
      break;
    case 16:
      var value = new src_proto_crypto_pb.IdentityKey;
      reader.readMessage(value,src_proto_crypto_pb.IdentityKey.deserializeBinaryFromReader);
      msg.addSlashed(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setProposalStarted(value);
      break;
    case 100:
      var value = new proto.penumbra.chain.FmdParameters;
      reader.readMessage(value,proto.penumbra.chain.FmdParameters.deserializeBinaryFromReader);
      msg.setFmdParameters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.chain.CompactBlock.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.chain.CompactBlock.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.chain.CompactBlock} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.CompactBlock.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeight();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getNotePayloadsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.penumbra.chain.AnnotatedNotePayload.serializeBinaryToWriter
    );
  }
  f = message.getNullifiersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      src_proto_crypto_pb.Nullifier.serializeBinaryToWriter
    );
  }
  f = message.getBlockRoot();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      src_proto_crypto_pb.MerkleRoot.serializeBinaryToWriter
    );
  }
  f = message.getEpochRoot();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      src_proto_crypto_pb.MerkleRoot.serializeBinaryToWriter
    );
  }
  f = message.getQuarantined();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.penumbra.chain.Quarantined.serializeBinaryToWriter
    );
  }
  f = message.getSlashedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      src_proto_crypto_pb.IdentityKey.serializeBinaryToWriter
    );
  }
  f = message.getProposalStarted();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getFmdParameters();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.penumbra.chain.FmdParameters.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 height = 1;
 * @return {number}
 */
proto.penumbra.chain.CompactBlock.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.chain.CompactBlock} returns this
 */
proto.penumbra.chain.CompactBlock.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated AnnotatedNotePayload note_payloads = 2;
 * @return {!Array<!proto.penumbra.chain.AnnotatedNotePayload>}
 */
proto.penumbra.chain.CompactBlock.prototype.getNotePayloadsList = function() {
  return /** @type{!Array<!proto.penumbra.chain.AnnotatedNotePayload>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.penumbra.chain.AnnotatedNotePayload, 2));
};


/**
 * @param {!Array<!proto.penumbra.chain.AnnotatedNotePayload>} value
 * @return {!proto.penumbra.chain.CompactBlock} returns this
*/
proto.penumbra.chain.CompactBlock.prototype.setNotePayloadsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.penumbra.chain.AnnotatedNotePayload=} opt_value
 * @param {number=} opt_index
 * @return {!proto.penumbra.chain.AnnotatedNotePayload}
 */
proto.penumbra.chain.CompactBlock.prototype.addNotePayloads = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.penumbra.chain.AnnotatedNotePayload, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.penumbra.chain.CompactBlock} returns this
 */
proto.penumbra.chain.CompactBlock.prototype.clearNotePayloadsList = function() {
  return this.setNotePayloadsList([]);
};


/**
 * repeated penumbra.crypto.Nullifier nullifiers = 3;
 * @return {!Array<!proto.penumbra.crypto.Nullifier>}
 */
proto.penumbra.chain.CompactBlock.prototype.getNullifiersList = function() {
  return /** @type{!Array<!proto.penumbra.crypto.Nullifier>} */ (
    jspb.Message.getRepeatedWrapperField(this, src_proto_crypto_pb.Nullifier, 3));
};


/**
 * @param {!Array<!proto.penumbra.crypto.Nullifier>} value
 * @return {!proto.penumbra.chain.CompactBlock} returns this
*/
proto.penumbra.chain.CompactBlock.prototype.setNullifiersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.penumbra.crypto.Nullifier=} opt_value
 * @param {number=} opt_index
 * @return {!proto.penumbra.crypto.Nullifier}
 */
proto.penumbra.chain.CompactBlock.prototype.addNullifiers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.penumbra.crypto.Nullifier, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.penumbra.chain.CompactBlock} returns this
 */
proto.penumbra.chain.CompactBlock.prototype.clearNullifiersList = function() {
  return this.setNullifiersList([]);
};


/**
 * optional penumbra.crypto.MerkleRoot block_root = 4;
 * @return {?proto.penumbra.crypto.MerkleRoot}
 */
proto.penumbra.chain.CompactBlock.prototype.getBlockRoot = function() {
  return /** @type{?proto.penumbra.crypto.MerkleRoot} */ (
    jspb.Message.getWrapperField(this, src_proto_crypto_pb.MerkleRoot, 4));
};


/**
 * @param {?proto.penumbra.crypto.MerkleRoot|undefined} value
 * @return {!proto.penumbra.chain.CompactBlock} returns this
*/
proto.penumbra.chain.CompactBlock.prototype.setBlockRoot = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.chain.CompactBlock} returns this
 */
proto.penumbra.chain.CompactBlock.prototype.clearBlockRoot = function() {
  return this.setBlockRoot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.chain.CompactBlock.prototype.hasBlockRoot = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional penumbra.crypto.MerkleRoot epoch_root = 5;
 * @return {?proto.penumbra.crypto.MerkleRoot}
 */
proto.penumbra.chain.CompactBlock.prototype.getEpochRoot = function() {
  return /** @type{?proto.penumbra.crypto.MerkleRoot} */ (
    jspb.Message.getWrapperField(this, src_proto_crypto_pb.MerkleRoot, 5));
};


/**
 * @param {?proto.penumbra.crypto.MerkleRoot|undefined} value
 * @return {!proto.penumbra.chain.CompactBlock} returns this
*/
proto.penumbra.chain.CompactBlock.prototype.setEpochRoot = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.chain.CompactBlock} returns this
 */
proto.penumbra.chain.CompactBlock.prototype.clearEpochRoot = function() {
  return this.setEpochRoot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.chain.CompactBlock.prototype.hasEpochRoot = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Quarantined quarantined = 6;
 * @return {?proto.penumbra.chain.Quarantined}
 */
proto.penumbra.chain.CompactBlock.prototype.getQuarantined = function() {
  return /** @type{?proto.penumbra.chain.Quarantined} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.chain.Quarantined, 6));
};


/**
 * @param {?proto.penumbra.chain.Quarantined|undefined} value
 * @return {!proto.penumbra.chain.CompactBlock} returns this
*/
proto.penumbra.chain.CompactBlock.prototype.setQuarantined = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.chain.CompactBlock} returns this
 */
proto.penumbra.chain.CompactBlock.prototype.clearQuarantined = function() {
  return this.setQuarantined(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.chain.CompactBlock.prototype.hasQuarantined = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated penumbra.crypto.IdentityKey slashed = 16;
 * @return {!Array<!proto.penumbra.crypto.IdentityKey>}
 */
proto.penumbra.chain.CompactBlock.prototype.getSlashedList = function() {
  return /** @type{!Array<!proto.penumbra.crypto.IdentityKey>} */ (
    jspb.Message.getRepeatedWrapperField(this, src_proto_crypto_pb.IdentityKey, 16));
};


/**
 * @param {!Array<!proto.penumbra.crypto.IdentityKey>} value
 * @return {!proto.penumbra.chain.CompactBlock} returns this
*/
proto.penumbra.chain.CompactBlock.prototype.setSlashedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.penumbra.crypto.IdentityKey=} opt_value
 * @param {number=} opt_index
 * @return {!proto.penumbra.crypto.IdentityKey}
 */
proto.penumbra.chain.CompactBlock.prototype.addSlashed = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.penumbra.crypto.IdentityKey, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.penumbra.chain.CompactBlock} returns this
 */
proto.penumbra.chain.CompactBlock.prototype.clearSlashedList = function() {
  return this.setSlashedList([]);
};


/**
 * optional bool proposal_started = 20;
 * @return {boolean}
 */
proto.penumbra.chain.CompactBlock.prototype.getProposalStarted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.penumbra.chain.CompactBlock} returns this
 */
proto.penumbra.chain.CompactBlock.prototype.setProposalStarted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional FmdParameters fmd_parameters = 100;
 * @return {?proto.penumbra.chain.FmdParameters}
 */
proto.penumbra.chain.CompactBlock.prototype.getFmdParameters = function() {
  return /** @type{?proto.penumbra.chain.FmdParameters} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.chain.FmdParameters, 100));
};


/**
 * @param {?proto.penumbra.chain.FmdParameters|undefined} value
 * @return {!proto.penumbra.chain.CompactBlock} returns this
*/
proto.penumbra.chain.CompactBlock.prototype.setFmdParameters = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.chain.CompactBlock} returns this
 */
proto.penumbra.chain.CompactBlock.prototype.clearFmdParameters = function() {
  return this.setFmdParameters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.chain.CompactBlock.prototype.hasFmdParameters = function() {
  return jspb.Message.getField(this, 100) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.chain.AnnotatedNotePayload.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.chain.AnnotatedNotePayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.chain.AnnotatedNotePayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.AnnotatedNotePayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    payload: (f = msg.getPayload()) && src_proto_crypto_pb.NotePayload.toObject(includeInstance, f),
    source: (f = msg.getSource()) && proto.penumbra.chain.NoteSource.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.chain.AnnotatedNotePayload}
 */
proto.penumbra.chain.AnnotatedNotePayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.chain.AnnotatedNotePayload;
  return proto.penumbra.chain.AnnotatedNotePayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.chain.AnnotatedNotePayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.chain.AnnotatedNotePayload}
 */
proto.penumbra.chain.AnnotatedNotePayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new src_proto_crypto_pb.NotePayload;
      reader.readMessage(value,src_proto_crypto_pb.NotePayload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    case 2:
      var value = new proto.penumbra.chain.NoteSource;
      reader.readMessage(value,proto.penumbra.chain.NoteSource.deserializeBinaryFromReader);
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.chain.AnnotatedNotePayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.chain.AnnotatedNotePayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.chain.AnnotatedNotePayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.AnnotatedNotePayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      src_proto_crypto_pb.NotePayload.serializeBinaryToWriter
    );
  }
  f = message.getSource();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.penumbra.chain.NoteSource.serializeBinaryToWriter
    );
  }
};


/**
 * optional penumbra.crypto.NotePayload payload = 1;
 * @return {?proto.penumbra.crypto.NotePayload}
 */
proto.penumbra.chain.AnnotatedNotePayload.prototype.getPayload = function() {
  return /** @type{?proto.penumbra.crypto.NotePayload} */ (
    jspb.Message.getWrapperField(this, src_proto_crypto_pb.NotePayload, 1));
};


/**
 * @param {?proto.penumbra.crypto.NotePayload|undefined} value
 * @return {!proto.penumbra.chain.AnnotatedNotePayload} returns this
*/
proto.penumbra.chain.AnnotatedNotePayload.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.chain.AnnotatedNotePayload} returns this
 */
proto.penumbra.chain.AnnotatedNotePayload.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.chain.AnnotatedNotePayload.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional NoteSource source = 2;
 * @return {?proto.penumbra.chain.NoteSource}
 */
proto.penumbra.chain.AnnotatedNotePayload.prototype.getSource = function() {
  return /** @type{?proto.penumbra.chain.NoteSource} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.chain.NoteSource, 2));
};


/**
 * @param {?proto.penumbra.chain.NoteSource|undefined} value
 * @return {!proto.penumbra.chain.AnnotatedNotePayload} returns this
*/
proto.penumbra.chain.AnnotatedNotePayload.prototype.setSource = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.chain.AnnotatedNotePayload} returns this
 */
proto.penumbra.chain.AnnotatedNotePayload.prototype.clearSource = function() {
  return this.setSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.chain.AnnotatedNotePayload.prototype.hasSource = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.penumbra.chain.KnownAssets.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.chain.KnownAssets.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.chain.KnownAssets.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.chain.KnownAssets} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.KnownAssets.toObject = function(includeInstance, msg) {
  var f, obj = {
    assetsList: jspb.Message.toObjectList(msg.getAssetsList(),
    src_proto_crypto_pb.Asset.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.chain.KnownAssets}
 */
proto.penumbra.chain.KnownAssets.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.chain.KnownAssets;
  return proto.penumbra.chain.KnownAssets.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.chain.KnownAssets} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.chain.KnownAssets}
 */
proto.penumbra.chain.KnownAssets.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new src_proto_crypto_pb.Asset;
      reader.readMessage(value,src_proto_crypto_pb.Asset.deserializeBinaryFromReader);
      msg.addAssets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.chain.KnownAssets.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.chain.KnownAssets.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.chain.KnownAssets} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.KnownAssets.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      src_proto_crypto_pb.Asset.serializeBinaryToWriter
    );
  }
};


/**
 * repeated penumbra.crypto.Asset assets = 1;
 * @return {!Array<!proto.penumbra.crypto.Asset>}
 */
proto.penumbra.chain.KnownAssets.prototype.getAssetsList = function() {
  return /** @type{!Array<!proto.penumbra.crypto.Asset>} */ (
    jspb.Message.getRepeatedWrapperField(this, src_proto_crypto_pb.Asset, 1));
};


/**
 * @param {!Array<!proto.penumbra.crypto.Asset>} value
 * @return {!proto.penumbra.chain.KnownAssets} returns this
*/
proto.penumbra.chain.KnownAssets.prototype.setAssetsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.penumbra.crypto.Asset=} opt_value
 * @param {number=} opt_index
 * @return {!proto.penumbra.crypto.Asset}
 */
proto.penumbra.chain.KnownAssets.prototype.addAssets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.penumbra.crypto.Asset, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.penumbra.chain.KnownAssets} returns this
 */
proto.penumbra.chain.KnownAssets.prototype.clearAssetsList = function() {
  return this.setAssetsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.chain.NoteSource.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.chain.NoteSource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.chain.NoteSource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.NoteSource.toObject = function(includeInstance, msg) {
  var f, obj = {
    inner: msg.getInner_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.chain.NoteSource}
 */
proto.penumbra.chain.NoteSource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.chain.NoteSource;
  return proto.penumbra.chain.NoteSource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.chain.NoteSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.chain.NoteSource}
 */
proto.penumbra.chain.NoteSource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInner(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.chain.NoteSource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.chain.NoteSource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.chain.NoteSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.NoteSource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInner_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes inner = 1;
 * @return {!(string|Uint8Array)}
 */
proto.penumbra.chain.NoteSource.prototype.getInner = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes inner = 1;
 * This is a type-conversion wrapper around `getInner()`
 * @return {string}
 */
proto.penumbra.chain.NoteSource.prototype.getInner_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInner()));
};


/**
 * optional bytes inner = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInner()`
 * @return {!Uint8Array}
 */
proto.penumbra.chain.NoteSource.prototype.getInner_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInner()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.penumbra.chain.NoteSource} returns this
 */
proto.penumbra.chain.NoteSource.prototype.setInner = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.chain.DelibleNoteSource.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.chain.DelibleNoteSource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.chain.DelibleNoteSource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.DelibleNoteSource.toObject = function(includeInstance, msg) {
  var f, obj = {
    source: (f = msg.getSource()) && proto.penumbra.chain.NoteSource.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.chain.DelibleNoteSource}
 */
proto.penumbra.chain.DelibleNoteSource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.chain.DelibleNoteSource;
  return proto.penumbra.chain.DelibleNoteSource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.chain.DelibleNoteSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.chain.DelibleNoteSource}
 */
proto.penumbra.chain.DelibleNoteSource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.penumbra.chain.NoteSource;
      reader.readMessage(value,proto.penumbra.chain.NoteSource.deserializeBinaryFromReader);
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.chain.DelibleNoteSource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.chain.DelibleNoteSource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.chain.DelibleNoteSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.DelibleNoteSource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSource();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.penumbra.chain.NoteSource.serializeBinaryToWriter
    );
  }
};


/**
 * optional NoteSource source = 1;
 * @return {?proto.penumbra.chain.NoteSource}
 */
proto.penumbra.chain.DelibleNoteSource.prototype.getSource = function() {
  return /** @type{?proto.penumbra.chain.NoteSource} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.chain.NoteSource, 1));
};


/**
 * @param {?proto.penumbra.chain.NoteSource|undefined} value
 * @return {!proto.penumbra.chain.DelibleNoteSource} returns this
*/
proto.penumbra.chain.DelibleNoteSource.prototype.setSource = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.chain.DelibleNoteSource} returns this
 */
proto.penumbra.chain.DelibleNoteSource.prototype.clearSource = function() {
  return this.setSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.chain.DelibleNoteSource.prototype.hasSource = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.penumbra.chain.GenesisAppState.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.chain.GenesisAppState.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.chain.GenesisAppState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.chain.GenesisAppState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.GenesisAppState.toObject = function(includeInstance, msg) {
  var f, obj = {
    chainParams: (f = msg.getChainParams()) && proto.penumbra.chain.ChainParameters.toObject(includeInstance, f),
    validatorsList: jspb.Message.toObjectList(msg.getValidatorsList(),
    src_proto_stake_pb.Validator.toObject, includeInstance),
    allocationsList: jspb.Message.toObjectList(msg.getAllocationsList(),
    proto.penumbra.chain.GenesisAppState.Allocation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.chain.GenesisAppState}
 */
proto.penumbra.chain.GenesisAppState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.chain.GenesisAppState;
  return proto.penumbra.chain.GenesisAppState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.chain.GenesisAppState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.chain.GenesisAppState}
 */
proto.penumbra.chain.GenesisAppState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.penumbra.chain.ChainParameters;
      reader.readMessage(value,proto.penumbra.chain.ChainParameters.deserializeBinaryFromReader);
      msg.setChainParams(value);
      break;
    case 2:
      var value = new src_proto_stake_pb.Validator;
      reader.readMessage(value,src_proto_stake_pb.Validator.deserializeBinaryFromReader);
      msg.addValidators(value);
      break;
    case 3:
      var value = new proto.penumbra.chain.GenesisAppState.Allocation;
      reader.readMessage(value,proto.penumbra.chain.GenesisAppState.Allocation.deserializeBinaryFromReader);
      msg.addAllocations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.chain.GenesisAppState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.chain.GenesisAppState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.chain.GenesisAppState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.GenesisAppState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainParams();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.penumbra.chain.ChainParameters.serializeBinaryToWriter
    );
  }
  f = message.getValidatorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      src_proto_stake_pb.Validator.serializeBinaryToWriter
    );
  }
  f = message.getAllocationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.penumbra.chain.GenesisAppState.Allocation.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.chain.GenesisAppState.Allocation.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.chain.GenesisAppState.Allocation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.chain.GenesisAppState.Allocation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.GenesisAppState.Allocation.toObject = function(includeInstance, msg) {
  var f, obj = {
    amount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    denom: jspb.Message.getFieldWithDefault(msg, 2, ""),
    address: (f = msg.getAddress()) && src_proto_crypto_pb.Address.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.chain.GenesisAppState.Allocation}
 */
proto.penumbra.chain.GenesisAppState.Allocation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.chain.GenesisAppState.Allocation;
  return proto.penumbra.chain.GenesisAppState.Allocation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.chain.GenesisAppState.Allocation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.chain.GenesisAppState.Allocation}
 */
proto.penumbra.chain.GenesisAppState.Allocation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAmount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDenom(value);
      break;
    case 3:
      var value = new src_proto_crypto_pb.Address;
      reader.readMessage(value,src_proto_crypto_pb.Address.deserializeBinaryFromReader);
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.chain.GenesisAppState.Allocation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.chain.GenesisAppState.Allocation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.chain.GenesisAppState.Allocation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.GenesisAppState.Allocation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmount();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getDenom();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAddress();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      src_proto_crypto_pb.Address.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 amount = 1;
 * @return {number}
 */
proto.penumbra.chain.GenesisAppState.Allocation.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.chain.GenesisAppState.Allocation} returns this
 */
proto.penumbra.chain.GenesisAppState.Allocation.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string denom = 2;
 * @return {string}
 */
proto.penumbra.chain.GenesisAppState.Allocation.prototype.getDenom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.penumbra.chain.GenesisAppState.Allocation} returns this
 */
proto.penumbra.chain.GenesisAppState.Allocation.prototype.setDenom = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional penumbra.crypto.Address address = 3;
 * @return {?proto.penumbra.crypto.Address}
 */
proto.penumbra.chain.GenesisAppState.Allocation.prototype.getAddress = function() {
  return /** @type{?proto.penumbra.crypto.Address} */ (
    jspb.Message.getWrapperField(this, src_proto_crypto_pb.Address, 3));
};


/**
 * @param {?proto.penumbra.crypto.Address|undefined} value
 * @return {!proto.penumbra.chain.GenesisAppState.Allocation} returns this
*/
proto.penumbra.chain.GenesisAppState.Allocation.prototype.setAddress = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.chain.GenesisAppState.Allocation} returns this
 */
proto.penumbra.chain.GenesisAppState.Allocation.prototype.clearAddress = function() {
  return this.setAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.chain.GenesisAppState.Allocation.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ChainParameters chain_params = 1;
 * @return {?proto.penumbra.chain.ChainParameters}
 */
proto.penumbra.chain.GenesisAppState.prototype.getChainParams = function() {
  return /** @type{?proto.penumbra.chain.ChainParameters} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.chain.ChainParameters, 1));
};


/**
 * @param {?proto.penumbra.chain.ChainParameters|undefined} value
 * @return {!proto.penumbra.chain.GenesisAppState} returns this
*/
proto.penumbra.chain.GenesisAppState.prototype.setChainParams = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.chain.GenesisAppState} returns this
 */
proto.penumbra.chain.GenesisAppState.prototype.clearChainParams = function() {
  return this.setChainParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.chain.GenesisAppState.prototype.hasChainParams = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated penumbra.stake.Validator validators = 2;
 * @return {!Array<!proto.penumbra.stake.Validator>}
 */
proto.penumbra.chain.GenesisAppState.prototype.getValidatorsList = function() {
  return /** @type{!Array<!proto.penumbra.stake.Validator>} */ (
    jspb.Message.getRepeatedWrapperField(this, src_proto_stake_pb.Validator, 2));
};


/**
 * @param {!Array<!proto.penumbra.stake.Validator>} value
 * @return {!proto.penumbra.chain.GenesisAppState} returns this
*/
proto.penumbra.chain.GenesisAppState.prototype.setValidatorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.penumbra.stake.Validator=} opt_value
 * @param {number=} opt_index
 * @return {!proto.penumbra.stake.Validator}
 */
proto.penumbra.chain.GenesisAppState.prototype.addValidators = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.penumbra.stake.Validator, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.penumbra.chain.GenesisAppState} returns this
 */
proto.penumbra.chain.GenesisAppState.prototype.clearValidatorsList = function() {
  return this.setValidatorsList([]);
};


/**
 * repeated Allocation allocations = 3;
 * @return {!Array<!proto.penumbra.chain.GenesisAppState.Allocation>}
 */
proto.penumbra.chain.GenesisAppState.prototype.getAllocationsList = function() {
  return /** @type{!Array<!proto.penumbra.chain.GenesisAppState.Allocation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.penumbra.chain.GenesisAppState.Allocation, 3));
};


/**
 * @param {!Array<!proto.penumbra.chain.GenesisAppState.Allocation>} value
 * @return {!proto.penumbra.chain.GenesisAppState} returns this
*/
proto.penumbra.chain.GenesisAppState.prototype.setAllocationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.penumbra.chain.GenesisAppState.Allocation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.penumbra.chain.GenesisAppState.Allocation}
 */
proto.penumbra.chain.GenesisAppState.prototype.addAllocations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.penumbra.chain.GenesisAppState.Allocation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.penumbra.chain.GenesisAppState} returns this
 */
proto.penumbra.chain.GenesisAppState.prototype.clearAllocationsList = function() {
  return this.setAllocationsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.penumbra.chain.Quarantined.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.chain.Quarantined.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.chain.Quarantined.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.chain.Quarantined} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.Quarantined.toObject = function(includeInstance, msg) {
  var f, obj = {
    perEpochList: jspb.Message.toObjectList(msg.getPerEpochList(),
    proto.penumbra.chain.Quarantined.EpochEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.chain.Quarantined}
 */
proto.penumbra.chain.Quarantined.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.chain.Quarantined;
  return proto.penumbra.chain.Quarantined.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.chain.Quarantined} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.chain.Quarantined}
 */
proto.penumbra.chain.Quarantined.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.penumbra.chain.Quarantined.EpochEntry;
      reader.readMessage(value,proto.penumbra.chain.Quarantined.EpochEntry.deserializeBinaryFromReader);
      msg.addPerEpoch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.chain.Quarantined.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.chain.Quarantined.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.chain.Quarantined} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.Quarantined.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPerEpochList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.penumbra.chain.Quarantined.EpochEntry.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.penumbra.chain.Quarantined.Unbonding.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.chain.Quarantined.Unbonding.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.chain.Quarantined.Unbonding.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.chain.Quarantined.Unbonding} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.Quarantined.Unbonding.toObject = function(includeInstance, msg) {
  var f, obj = {
    notePayloadsList: jspb.Message.toObjectList(msg.getNotePayloadsList(),
    proto.penumbra.chain.AnnotatedNotePayload.toObject, includeInstance),
    nullifiersList: jspb.Message.toObjectList(msg.getNullifiersList(),
    src_proto_crypto_pb.Nullifier.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.chain.Quarantined.Unbonding}
 */
proto.penumbra.chain.Quarantined.Unbonding.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.chain.Quarantined.Unbonding;
  return proto.penumbra.chain.Quarantined.Unbonding.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.chain.Quarantined.Unbonding} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.chain.Quarantined.Unbonding}
 */
proto.penumbra.chain.Quarantined.Unbonding.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.penumbra.chain.AnnotatedNotePayload;
      reader.readMessage(value,proto.penumbra.chain.AnnotatedNotePayload.deserializeBinaryFromReader);
      msg.addNotePayloads(value);
      break;
    case 2:
      var value = new src_proto_crypto_pb.Nullifier;
      reader.readMessage(value,src_proto_crypto_pb.Nullifier.deserializeBinaryFromReader);
      msg.addNullifiers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.chain.Quarantined.Unbonding.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.chain.Quarantined.Unbonding.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.chain.Quarantined.Unbonding} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.Quarantined.Unbonding.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNotePayloadsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.penumbra.chain.AnnotatedNotePayload.serializeBinaryToWriter
    );
  }
  f = message.getNullifiersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      src_proto_crypto_pb.Nullifier.serializeBinaryToWriter
    );
  }
};


/**
 * repeated AnnotatedNotePayload note_payloads = 1;
 * @return {!Array<!proto.penumbra.chain.AnnotatedNotePayload>}
 */
proto.penumbra.chain.Quarantined.Unbonding.prototype.getNotePayloadsList = function() {
  return /** @type{!Array<!proto.penumbra.chain.AnnotatedNotePayload>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.penumbra.chain.AnnotatedNotePayload, 1));
};


/**
 * @param {!Array<!proto.penumbra.chain.AnnotatedNotePayload>} value
 * @return {!proto.penumbra.chain.Quarantined.Unbonding} returns this
*/
proto.penumbra.chain.Quarantined.Unbonding.prototype.setNotePayloadsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.penumbra.chain.AnnotatedNotePayload=} opt_value
 * @param {number=} opt_index
 * @return {!proto.penumbra.chain.AnnotatedNotePayload}
 */
proto.penumbra.chain.Quarantined.Unbonding.prototype.addNotePayloads = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.penumbra.chain.AnnotatedNotePayload, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.penumbra.chain.Quarantined.Unbonding} returns this
 */
proto.penumbra.chain.Quarantined.Unbonding.prototype.clearNotePayloadsList = function() {
  return this.setNotePayloadsList([]);
};


/**
 * repeated penumbra.crypto.Nullifier nullifiers = 2;
 * @return {!Array<!proto.penumbra.crypto.Nullifier>}
 */
proto.penumbra.chain.Quarantined.Unbonding.prototype.getNullifiersList = function() {
  return /** @type{!Array<!proto.penumbra.crypto.Nullifier>} */ (
    jspb.Message.getRepeatedWrapperField(this, src_proto_crypto_pb.Nullifier, 2));
};


/**
 * @param {!Array<!proto.penumbra.crypto.Nullifier>} value
 * @return {!proto.penumbra.chain.Quarantined.Unbonding} returns this
*/
proto.penumbra.chain.Quarantined.Unbonding.prototype.setNullifiersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.penumbra.crypto.Nullifier=} opt_value
 * @param {number=} opt_index
 * @return {!proto.penumbra.crypto.Nullifier}
 */
proto.penumbra.chain.Quarantined.Unbonding.prototype.addNullifiers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.penumbra.crypto.Nullifier, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.penumbra.chain.Quarantined.Unbonding} returns this
 */
proto.penumbra.chain.Quarantined.Unbonding.prototype.clearNullifiersList = function() {
  return this.setNullifiersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.chain.Quarantined.ValidatorEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.chain.Quarantined.ValidatorEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.chain.Quarantined.ValidatorEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.Quarantined.ValidatorEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    identityKey: (f = msg.getIdentityKey()) && src_proto_crypto_pb.IdentityKey.toObject(includeInstance, f),
    unbonding: (f = msg.getUnbonding()) && proto.penumbra.chain.Quarantined.Unbonding.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.chain.Quarantined.ValidatorEntry}
 */
proto.penumbra.chain.Quarantined.ValidatorEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.chain.Quarantined.ValidatorEntry;
  return proto.penumbra.chain.Quarantined.ValidatorEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.chain.Quarantined.ValidatorEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.chain.Quarantined.ValidatorEntry}
 */
proto.penumbra.chain.Quarantined.ValidatorEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new src_proto_crypto_pb.IdentityKey;
      reader.readMessage(value,src_proto_crypto_pb.IdentityKey.deserializeBinaryFromReader);
      msg.setIdentityKey(value);
      break;
    case 2:
      var value = new proto.penumbra.chain.Quarantined.Unbonding;
      reader.readMessage(value,proto.penumbra.chain.Quarantined.Unbonding.deserializeBinaryFromReader);
      msg.setUnbonding(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.chain.Quarantined.ValidatorEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.chain.Quarantined.ValidatorEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.chain.Quarantined.ValidatorEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.Quarantined.ValidatorEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentityKey();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      src_proto_crypto_pb.IdentityKey.serializeBinaryToWriter
    );
  }
  f = message.getUnbonding();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.penumbra.chain.Quarantined.Unbonding.serializeBinaryToWriter
    );
  }
};


/**
 * optional penumbra.crypto.IdentityKey identity_key = 1;
 * @return {?proto.penumbra.crypto.IdentityKey}
 */
proto.penumbra.chain.Quarantined.ValidatorEntry.prototype.getIdentityKey = function() {
  return /** @type{?proto.penumbra.crypto.IdentityKey} */ (
    jspb.Message.getWrapperField(this, src_proto_crypto_pb.IdentityKey, 1));
};


/**
 * @param {?proto.penumbra.crypto.IdentityKey|undefined} value
 * @return {!proto.penumbra.chain.Quarantined.ValidatorEntry} returns this
*/
proto.penumbra.chain.Quarantined.ValidatorEntry.prototype.setIdentityKey = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.chain.Quarantined.ValidatorEntry} returns this
 */
proto.penumbra.chain.Quarantined.ValidatorEntry.prototype.clearIdentityKey = function() {
  return this.setIdentityKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.chain.Quarantined.ValidatorEntry.prototype.hasIdentityKey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Unbonding unbonding = 2;
 * @return {?proto.penumbra.chain.Quarantined.Unbonding}
 */
proto.penumbra.chain.Quarantined.ValidatorEntry.prototype.getUnbonding = function() {
  return /** @type{?proto.penumbra.chain.Quarantined.Unbonding} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.chain.Quarantined.Unbonding, 2));
};


/**
 * @param {?proto.penumbra.chain.Quarantined.Unbonding|undefined} value
 * @return {!proto.penumbra.chain.Quarantined.ValidatorEntry} returns this
*/
proto.penumbra.chain.Quarantined.ValidatorEntry.prototype.setUnbonding = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.chain.Quarantined.ValidatorEntry} returns this
 */
proto.penumbra.chain.Quarantined.ValidatorEntry.prototype.clearUnbonding = function() {
  return this.setUnbonding(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.chain.Quarantined.ValidatorEntry.prototype.hasUnbonding = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.penumbra.chain.Quarantined.Scheduled.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.chain.Quarantined.Scheduled.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.chain.Quarantined.Scheduled.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.chain.Quarantined.Scheduled} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.Quarantined.Scheduled.toObject = function(includeInstance, msg) {
  var f, obj = {
    perValidatorList: jspb.Message.toObjectList(msg.getPerValidatorList(),
    proto.penumbra.chain.Quarantined.ValidatorEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.chain.Quarantined.Scheduled}
 */
proto.penumbra.chain.Quarantined.Scheduled.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.chain.Quarantined.Scheduled;
  return proto.penumbra.chain.Quarantined.Scheduled.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.chain.Quarantined.Scheduled} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.chain.Quarantined.Scheduled}
 */
proto.penumbra.chain.Quarantined.Scheduled.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.penumbra.chain.Quarantined.ValidatorEntry;
      reader.readMessage(value,proto.penumbra.chain.Quarantined.ValidatorEntry.deserializeBinaryFromReader);
      msg.addPerValidator(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.chain.Quarantined.Scheduled.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.chain.Quarantined.Scheduled.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.chain.Quarantined.Scheduled} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.Quarantined.Scheduled.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPerValidatorList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.penumbra.chain.Quarantined.ValidatorEntry.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ValidatorEntry per_validator = 1;
 * @return {!Array<!proto.penumbra.chain.Quarantined.ValidatorEntry>}
 */
proto.penumbra.chain.Quarantined.Scheduled.prototype.getPerValidatorList = function() {
  return /** @type{!Array<!proto.penumbra.chain.Quarantined.ValidatorEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.penumbra.chain.Quarantined.ValidatorEntry, 1));
};


/**
 * @param {!Array<!proto.penumbra.chain.Quarantined.ValidatorEntry>} value
 * @return {!proto.penumbra.chain.Quarantined.Scheduled} returns this
*/
proto.penumbra.chain.Quarantined.Scheduled.prototype.setPerValidatorList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.penumbra.chain.Quarantined.ValidatorEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.penumbra.chain.Quarantined.ValidatorEntry}
 */
proto.penumbra.chain.Quarantined.Scheduled.prototype.addPerValidator = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.penumbra.chain.Quarantined.ValidatorEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.penumbra.chain.Quarantined.Scheduled} returns this
 */
proto.penumbra.chain.Quarantined.Scheduled.prototype.clearPerValidatorList = function() {
  return this.setPerValidatorList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.chain.Quarantined.EpochEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.chain.Quarantined.EpochEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.chain.Quarantined.EpochEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.Quarantined.EpochEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    unbondingEpoch: jspb.Message.getFieldWithDefault(msg, 1, 0),
    scheduled: (f = msg.getScheduled()) && proto.penumbra.chain.Quarantined.Scheduled.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.chain.Quarantined.EpochEntry}
 */
proto.penumbra.chain.Quarantined.EpochEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.chain.Quarantined.EpochEntry;
  return proto.penumbra.chain.Quarantined.EpochEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.chain.Quarantined.EpochEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.chain.Quarantined.EpochEntry}
 */
proto.penumbra.chain.Quarantined.EpochEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUnbondingEpoch(value);
      break;
    case 2:
      var value = new proto.penumbra.chain.Quarantined.Scheduled;
      reader.readMessage(value,proto.penumbra.chain.Quarantined.Scheduled.deserializeBinaryFromReader);
      msg.setScheduled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.chain.Quarantined.EpochEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.chain.Quarantined.EpochEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.chain.Quarantined.EpochEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.Quarantined.EpochEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnbondingEpoch();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getScheduled();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.penumbra.chain.Quarantined.Scheduled.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 unbonding_epoch = 1;
 * @return {number}
 */
proto.penumbra.chain.Quarantined.EpochEntry.prototype.getUnbondingEpoch = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.penumbra.chain.Quarantined.EpochEntry} returns this
 */
proto.penumbra.chain.Quarantined.EpochEntry.prototype.setUnbondingEpoch = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Scheduled scheduled = 2;
 * @return {?proto.penumbra.chain.Quarantined.Scheduled}
 */
proto.penumbra.chain.Quarantined.EpochEntry.prototype.getScheduled = function() {
  return /** @type{?proto.penumbra.chain.Quarantined.Scheduled} */ (
    jspb.Message.getWrapperField(this, proto.penumbra.chain.Quarantined.Scheduled, 2));
};


/**
 * @param {?proto.penumbra.chain.Quarantined.Scheduled|undefined} value
 * @return {!proto.penumbra.chain.Quarantined.EpochEntry} returns this
*/
proto.penumbra.chain.Quarantined.EpochEntry.prototype.setScheduled = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.penumbra.chain.Quarantined.EpochEntry} returns this
 */
proto.penumbra.chain.Quarantined.EpochEntry.prototype.clearScheduled = function() {
  return this.setScheduled(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.penumbra.chain.Quarantined.EpochEntry.prototype.hasScheduled = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated EpochEntry per_epoch = 1;
 * @return {!Array<!proto.penumbra.chain.Quarantined.EpochEntry>}
 */
proto.penumbra.chain.Quarantined.prototype.getPerEpochList = function() {
  return /** @type{!Array<!proto.penumbra.chain.Quarantined.EpochEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.penumbra.chain.Quarantined.EpochEntry, 1));
};


/**
 * @param {!Array<!proto.penumbra.chain.Quarantined.EpochEntry>} value
 * @return {!proto.penumbra.chain.Quarantined} returns this
*/
proto.penumbra.chain.Quarantined.prototype.setPerEpochList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.penumbra.chain.Quarantined.EpochEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.penumbra.chain.Quarantined.EpochEntry}
 */
proto.penumbra.chain.Quarantined.prototype.addPerEpoch = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.penumbra.chain.Quarantined.EpochEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.penumbra.chain.Quarantined} returns this
 */
proto.penumbra.chain.Quarantined.prototype.clearPerEpochList = function() {
  return this.setPerEpochList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.penumbra.chain.Slashed.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.penumbra.chain.Slashed.prototype.toObject = function(opt_includeInstance) {
  return proto.penumbra.chain.Slashed.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.penumbra.chain.Slashed} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.Slashed.toObject = function(includeInstance, msg) {
  var f, obj = {
    validatorsList: jspb.Message.toObjectList(msg.getValidatorsList(),
    src_proto_crypto_pb.IdentityKey.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.penumbra.chain.Slashed}
 */
proto.penumbra.chain.Slashed.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.penumbra.chain.Slashed;
  return proto.penumbra.chain.Slashed.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.penumbra.chain.Slashed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.penumbra.chain.Slashed}
 */
proto.penumbra.chain.Slashed.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new src_proto_crypto_pb.IdentityKey;
      reader.readMessage(value,src_proto_crypto_pb.IdentityKey.deserializeBinaryFromReader);
      msg.addValidators(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.penumbra.chain.Slashed.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.penumbra.chain.Slashed.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.penumbra.chain.Slashed} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.penumbra.chain.Slashed.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidatorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      src_proto_crypto_pb.IdentityKey.serializeBinaryToWriter
    );
  }
};


/**
 * repeated penumbra.crypto.IdentityKey validators = 1;
 * @return {!Array<!proto.penumbra.crypto.IdentityKey>}
 */
proto.penumbra.chain.Slashed.prototype.getValidatorsList = function() {
  return /** @type{!Array<!proto.penumbra.crypto.IdentityKey>} */ (
    jspb.Message.getRepeatedWrapperField(this, src_proto_crypto_pb.IdentityKey, 1));
};


/**
 * @param {!Array<!proto.penumbra.crypto.IdentityKey>} value
 * @return {!proto.penumbra.chain.Slashed} returns this
*/
proto.penumbra.chain.Slashed.prototype.setValidatorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.penumbra.crypto.IdentityKey=} opt_value
 * @param {number=} opt_index
 * @return {!proto.penumbra.crypto.IdentityKey}
 */
proto.penumbra.chain.Slashed.prototype.addValidators = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.penumbra.crypto.IdentityKey, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.penumbra.chain.Slashed} returns this
 */
proto.penumbra.chain.Slashed.prototype.clearValidatorsList = function() {
  return this.setValidatorsList([]);
};


goog.object.extend(exports, proto.penumbra.chain);
